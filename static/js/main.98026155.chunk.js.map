{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","goods","visibleGoods","sort","a","b","length","console","log","getReorderedGoods","className","onClick","type","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SACH,CACEH,SAAUL,EAASM,KACnBF,YAAY,KAxBpB,4CA6BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAlEH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAgBzB,OAdIV,IAAaL,EAASS,UACxBO,EAAaC,OAGXZ,IAAaL,EAASW,QACxBK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGvChB,GACFY,EAAaJ,UAIfS,QAAQC,IAAIjB,EAAUD,GAClBC,IAAaL,EAASM,OAAuB,IAAfF,EACzBH,EAGFe,EAyCSO,CAAkBtB,EAAiB,CAAEI,WAAUD,eAE7D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASX,KAAKP,eACdmB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CACE,WAAYtB,IAAaL,EAASS,WAPxC,iCAcA,wBACEgB,QAASX,KAAKJ,aACdgB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,WAAYtB,IAAaL,EAASW,SAPxC,4BAcA,wBACEc,QAASX,KAAKF,QACdc,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,YAAavB,IAPnB,sBAcEC,IAAaL,EAASM,MAAQF,IAC9B,wBACEsB,KAAK,SACLF,UAAU,4BACVC,QAASX,KAAKD,MAHhB,sBASJ,6BACGE,EAAMa,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,eA7FnB,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.98026155.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n  if (sortType === SortType.NONE && isReversed !== true) {\n    return goodsFromServer;\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        sortType: SortType.NONE,\n        isReversed: false,\n      },\n    );\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortByAlphabet}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {goods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}